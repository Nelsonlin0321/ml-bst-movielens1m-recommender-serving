name: CICD

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest


    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
        
    - name: Checkout Repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.10'
      
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install torch --index-url https://download.pytorch.org/whl/cpu

    - name: Run Unit Tests
      
      env:
        AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ARTIFACTS_URL: ${{ vars.ARTIFACTS_URL }}

      run: pytest tests
    
    - name: Build Docker Image
      run: |
          docker build -t ${{ vars.IMAGE_NAME }}:latest -f ./Dockerfile.aws.lambda  . --platform linux/arm64/v8
      env:
        IMAGE_NAME: ${{ vars.IMAGE_NAME }}
    
    - name: Push To ECR
      run: |
        aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
        docker tag ${IMAGE_NAME}:latest ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_NAME}:latest
        docker push ${ACCOUNT_ID}.dkr.ecr.ap-southeast-1.amazonaws.com/${IMAGE_NAME}:latest
      env:
        AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        ACCOUNT_ID: ${{ vars.ACCOUNT_ID }}
        IMAGE_NAME: ${{ vars.IMAGE_NAME }}